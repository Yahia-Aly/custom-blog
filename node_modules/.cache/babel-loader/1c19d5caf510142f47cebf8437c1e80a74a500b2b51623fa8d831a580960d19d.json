{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProjects\\\\react-blog-template\\\\src\\\\pages\\\\Blogs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BodyContainer, Container } from '../components/StyledComponents/StyledComponents';\nimport Article from '../components/Article/Article';\nimport Posts from '../posts/Posts';\nimport Navigation from '../components/Navigation/Navigation';\nimport Footer from '../components/Footer/Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Blogs = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/posts');\n        if (!response.ok) {\n          throw new Error('Failed to fetch posts');\n        }\n        const data = await response.json();\n        // Only set posts if we actually got data\n        if (data && data.length > 0) {\n          setPosts(data);\n        } else {\n          setPosts(Posts);\n        }\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n        setError(err.message);\n        setPosts(Posts);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BodyContainer, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        top: 6,\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          leftAlign: true,\n          bottom: 4,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"All Blog Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No blog posts found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this) : posts.map(post => {\n          const isStaticPost = !post._id;\n          return /*#__PURE__*/_jsxDEV(Article, {\n            route: isStaticPost ? `/${post.route}` : `/post/${post._id}`,\n            thumbnail: post.coverImage || post.image,\n            title: post.title,\n            date: post.createdAt ? new Date(post.createdAt).toLocaleDateString() : post.date,\n            description: post.content ? post.content.substring(0, 150) + '...' : post.description\n          }, post._id || post.route, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Blogs, \"LokH4zLhvTiDlclYvi1UF5HfM98=\", false, function () {\n  return [useHistory];\n});\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","BodyContainer","Container","Article","Posts","Navigation","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","Blogs","_s","posts","setPosts","loading","setLoading","error","setError","history","fetchPosts","response","fetch","ok","Error","data","json","length","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","top","leftAlign","bottom","map","post","isStaticPost","_id","route","thumbnail","coverImage","image","title","date","createdAt","Date","toLocaleDateString","description","content","substring","_c","$RefreshReg$"],"sources":["C:/MyProjects/react-blog-template/src/pages/Blogs.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BodyContainer, Container } from '../components/StyledComponents/StyledComponents';\r\nimport Article from '../components/Article/Article';\r\nimport Posts from '../posts/Posts';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport Footer from '../components/Footer/Footer';\r\n\r\nconst Blogs = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/posts');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch posts');\r\n                }\r\n                const data = await response.json();\r\n                // Only set posts if we actually got data\r\n                if (data && data.length > 0) {\r\n                    setPosts(data);\r\n                } else {\r\n                    setPosts(Posts);\r\n                }\r\n            } catch (err) {\r\n                console.error('Error fetching posts:', err);\r\n                setError(err.message);\r\n                setPosts(Posts);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <BodyContainer>\r\n                <Container top={6}>\r\n                    <Container leftAlign bottom={4}>\r\n                        <h2>All Blog Posts</h2>\r\n                    </Container>\r\n                    {loading ? (\r\n                        <div>Loading...</div>\r\n                    ) : posts.length === 0 ? (\r\n                        <div>No blog posts found.</div>\r\n                    ) : (\r\n                        posts.map((post) => {\r\n                            const isStaticPost = !post._id;\r\n                            return (\r\n                                <Article\r\n                                    key={post._id || post.route}\r\n                                    route={isStaticPost ? `/${post.route}` : `/post/${post._id}`}\r\n                                    thumbnail={post.coverImage || post.image}\r\n                                    title={post.title}\r\n                                    date={post.createdAt ? new Date(post.createdAt).toLocaleDateString() : post.date}\r\n                                    description={post.content ? post.content.substring(0, 150) + '...' : post.description}\r\n                                />\r\n                            );\r\n                        })\r\n                    )}\r\n                </Container>\r\n            </BodyContainer>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Blogs; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,aAAa,EAAEC,SAAS,QAAQ,iDAAiD;AAC1F,OAAOC,OAAO,MAAM,+BAA+B;AACnD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMqB,OAAO,GAAGnB,UAAU,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACZ,MAAMqB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC;QACA,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;UACzBb,QAAQ,CAACW,IAAI,CAAC;QAClB,CAAC,MAAM;UACHX,QAAQ,CAACV,KAAK,CAAC;QACnB;MACJ,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACVC,OAAO,CAACZ,KAAK,CAAC,uBAAuB,EAAEW,GAAG,CAAC;QAC3CV,QAAQ,CAACU,GAAG,CAACE,OAAO,CAAC;QACrBhB,QAAQ,CAACV,KAAK,CAAC;MACnB,CAAC,SAAS;QACNY,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDI,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACIvB,OAAA,CAACH,UAAU;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACd3B,OAAA,CAACP,aAAa;MAAA8B,QAAA,eACVvB,OAAA,CAACN,SAAS;QAACkC,GAAG,EAAE,CAAE;QAAAL,QAAA,gBACdvB,OAAA,CAACN,SAAS;UAACmC,SAAS;UAACC,MAAM,EAAE,CAAE;UAAAP,QAAA,eAC3BvB,OAAA;YAAAuB,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,EACXpB,OAAO,gBACJP,OAAA;UAAAuB,QAAA,EAAK;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,GACrBtB,KAAK,CAACc,MAAM,KAAK,CAAC,gBAClBnB,OAAA;UAAAuB,QAAA,EAAK;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,GAE/BtB,KAAK,CAAC0B,GAAG,CAAEC,IAAI,IAAK;UAChB,MAAMC,YAAY,GAAG,CAACD,IAAI,CAACE,GAAG;UAC9B,oBACIlC,OAAA,CAACL,OAAO;YAEJwC,KAAK,EAAEF,YAAY,GAAG,IAAID,IAAI,CAACG,KAAK,EAAE,GAAG,SAASH,IAAI,CAACE,GAAG,EAAG;YAC7DE,SAAS,EAAEJ,IAAI,CAACK,UAAU,IAAIL,IAAI,CAACM,KAAM;YACzCC,KAAK,EAAEP,IAAI,CAACO,KAAM;YAClBC,IAAI,EAAER,IAAI,CAACS,SAAS,GAAG,IAAIC,IAAI,CAACV,IAAI,CAACS,SAAS,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAAGX,IAAI,CAACQ,IAAK;YACjFI,WAAW,EAAEZ,IAAI,CAACa,OAAO,GAAGb,IAAI,CAACa,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,GAAGd,IAAI,CAACY;UAAY,GALjFZ,IAAI,CAACE,GAAG,IAAIF,IAAI,CAACG,KAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAM9B,CAAC;QAEV,CAAC,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAChB3B,OAAA,CAACF,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACZ,CAAC;AAEX,CAAC;AAACvB,EAAA,CAhEID,KAAK;EAAA,QAISX,UAAU;AAAA;AAAAuD,EAAA,GAJxB5C,KAAK;AAkEX,eAAeA,KAAK;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}