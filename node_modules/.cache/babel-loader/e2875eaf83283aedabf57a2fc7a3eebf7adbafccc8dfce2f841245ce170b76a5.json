{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProjects\\\\react-blog-template\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Navigation from '../components/Navigation/Navigation';\nimport Footer from '../components/Footer/Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  padding: 2rem;\n  background-color: ${props => props.theme.colors.background};\n`;\n_c = LoginContainer;\nconst LoginForm = styled.form`\n  background: ${props => props.theme.colors.white};\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 400px;\n`;\n_c2 = LoginForm;\nconst Title = styled.h1`\n  color: ${props => props.theme.colors.primary};\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n_c3 = Title;\nconst Subtitle = styled.p`\n  color: ${props => props.theme.colors.text};\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n_c4 = Subtitle;\nconst RoleButton = styled.button`\n  width: 100%;\n  padding: 1rem;\n  margin-bottom: 1rem;\n  background-color: ${props => props.selected ? props.theme.colors.primary : 'transparent'};\n  color: ${props => props.selected ? 'white' : props.theme.colors.text};\n  border: 2px solid ${props => props.theme.colors.primary};\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${props => props.selected ? props.theme.colors.primaryDark : props.theme.colors.primaryLight};\n    color: white;\n  }\n`;\n_c5 = RoleButton;\nconst Input = styled.input`\n  width: 100%;\n  padding: 0.75rem;\n  margin-bottom: 1rem;\n  border: 1px solid ${props => props.theme.colors.gray};\n  border-radius: 4px;\n  font-size: 1rem;\n`;\n_c6 = Input;\nconst Button = styled.button`\n  width: 100%;\n  padding: 0.75rem;\n  background-color: ${props => props.theme.colors.primary};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${props => props.theme.colors.primaryDark};\n  }\n`;\n_c7 = Button;\nconst ErrorMessage = styled.p`\n  color: ${props => props.theme.colors.error};\n  margin-top: 1rem;\n  text-align: center;\n`;\n_c8 = ErrorMessage;\nconst Login = () => {\n  _s();\n  const [role, setRole] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    // Clear any existing user role when the login page loads\n    localStorage.removeItem('userRole');\n    localStorage.removeItem('adminPassword');\n  }, []);\n  const handleRoleSelect = selectedRole => {\n    setRole(selectedRole);\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    if (role === 'reader') {\n      localStorage.setItem('userRole', 'reader');\n      history.push('/');\n    } else if (role === 'admin') {\n      if (!password) {\n        setError('Please enter the admin password');\n        setIsLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:5000/api/verify-password', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            password\n          })\n        });\n        if (response.ok) {\n          localStorage.setItem('userRole', 'admin');\n          localStorage.setItem('adminPassword', password);\n          history.push('/');\n        } else {\n          const data = await response.json();\n          setError(data.message || 'Invalid admin password');\n        }\n      } catch (err) {\n        setError('Failed to connect to server. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      page: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Welcome to the Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n          children: \"Please select your role to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoleButton, {\n          type: \"button\",\n          selected: role === 'reader',\n          onClick: () => handleRoleSelect('reader'),\n          children: \"I'm a Reader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoleButton, {\n          type: \"button\",\n          selected: role === 'admin',\n          onClick: () => handleRoleSelect('admin'),\n          children: \"I'm the Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), role === 'admin' && /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"Enter admin password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Verifying...' : 'Continue'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"2+cXOE/b2mr9YyoS64sqab4fpzg=\", false, function () {\n  return [useHistory];\n});\n_c9 = Login;\nexport default Login;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"LoginContainer\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Subtitle\");\n$RefreshReg$(_c5, \"RoleButton\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"Button\");\n$RefreshReg$(_c8, \"ErrorMessage\");\n$RefreshReg$(_c9, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","styled","Navigation","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginContainer","div","props","theme","colors","background","_c","LoginForm","form","white","_c2","Title","h1","primary","_c3","Subtitle","p","text","_c4","RoleButton","button","selected","primaryDark","primaryLight","_c5","Input","input","gray","_c6","Button","_c7","ErrorMessage","error","_c8","Login","_s","role","setRole","password","setPassword","setError","isLoading","setIsLoading","history","localStorage","removeItem","handleRoleSelect","selectedRole","handleSubmit","e","preventDefault","setItem","push","response","fetch","method","headers","body","JSON","stringify","ok","data","json","message","err","children","page","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","placeholder","value","onChange","target","required","disabled","_c9","$RefreshReg$"],"sources":["C:/MyProjects/react-blog-template/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport Footer from '../components/Footer/Footer';\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding: 2rem;\r\n  background-color: ${props => props.theme.colors.background};\r\n`;\r\n\r\nconst LoginForm = styled.form`\r\n  background: ${props => props.theme.colors.white};\r\n  padding: 2rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${props => props.theme.colors.primary};\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Subtitle = styled.p`\r\n  color: ${props => props.theme.colors.text};\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst RoleButton = styled.button`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  margin-bottom: 1rem;\r\n  background-color: ${props => props.selected ? props.theme.colors.primary : 'transparent'};\r\n  color: ${props => props.selected ? 'white' : props.theme.colors.text};\r\n  border: 2px solid ${props => props.theme.colors.primary};\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.selected ? props.theme.colors.primaryDark : props.theme.colors.primaryLight};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid ${props => props.theme.colors.gray};\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background-color: ${props => props.theme.colors.primary};\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.primaryDark};\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  color: ${props => props.theme.colors.error};\r\n  margin-top: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [role, setRole] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // Clear any existing user role when the login page loads\r\n    localStorage.removeItem('userRole');\r\n    localStorage.removeItem('adminPassword');\r\n  }, []);\r\n\r\n  const handleRoleSelect = (selectedRole) => {\r\n    setRole(selectedRole);\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n\r\n    if (role === 'reader') {\r\n      localStorage.setItem('userRole', 'reader');\r\n      history.push('/');\r\n    } else if (role === 'admin') {\r\n      if (!password) {\r\n        setError('Please enter the admin password');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/verify-password', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ password }),\r\n        });\r\n\r\n        if (response.ok) {\r\n          localStorage.setItem('userRole', 'admin');\r\n          localStorage.setItem('adminPassword', password);\r\n          history.push('/');\r\n        } else {\r\n          const data = await response.json();\r\n          setError(data.message || 'Invalid admin password');\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to connect to server. Please try again.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navigation page=\"login\" />\r\n      <LoginContainer>\r\n        <LoginForm onSubmit={handleSubmit}>\r\n          <Title>Welcome to the Blog</Title>\r\n          <Subtitle>Please select your role to continue</Subtitle>\r\n          \r\n          <RoleButton\r\n            type=\"button\"\r\n            selected={role === 'reader'}\r\n            onClick={() => handleRoleSelect('reader')}\r\n          >\r\n            I'm a Reader\r\n          </RoleButton>\r\n          \r\n          <RoleButton\r\n            type=\"button\"\r\n            selected={role === 'admin'}\r\n            onClick={() => handleRoleSelect('admin')}\r\n          >\r\n            I'm the Admin\r\n          </RoleButton>\r\n\r\n          {role === 'admin' && (\r\n            <Input\r\n              type=\"password\"\r\n              placeholder=\"Enter admin password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          )}\r\n\r\n          <Button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Verifying...' : 'Continue'}\r\n          </Button>\r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </LoginForm>\r\n      </LoginContainer>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}