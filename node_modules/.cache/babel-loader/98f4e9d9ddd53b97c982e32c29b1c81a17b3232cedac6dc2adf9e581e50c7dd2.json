{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProjects\\\\react-blog-template\\\\src\\\\components\\\\Plant\\\\PlantOfTheDay.jsx\";\nimport React from 'react';\nimport { Container } from '../StyledComponents/StyledComponents';\nimport plantsData from '../../data/plantsData';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlantContainer = styled(Container)`\n    text-align: center;\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 2rem;\n    width: 100%;\n    box-sizing: border-box;\n    position: relative;\n\n    @media (max-width: ${props => props.theme.queries.mobile}) {\n        padding: 1rem;\n    }\n`;\n_c = PlantContainer;\nconst PlantImage = styled.img`\n    max-width: 100%;\n    height: auto;\n    border-radius: 8px;\n    margin: 2rem auto;\n    display: block;\n`;\n_c2 = PlantImage;\nconst DateDisplay = styled.p`\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    font-size: 14px;\n    color: ${props => props.theme.body.text};\n`;\n_c3 = DateDisplay;\nconst RecipeSection = styled.div`\n    margin: 2rem auto;\n    text-align: left;\n    max-width: 600px;\n`;\n_c4 = RecipeSection;\nconst Badge = styled.span`\n    display: inline-block;\n    padding: 0.25rem 0.75rem;\n    margin: 0.25rem;\n    border-radius: 4px;\n    background-color: rgba(255, 255, 255, 0.1);\n    font-size: 14px;\n`;\n_c5 = Badge;\nconst PlantOfTheDay = () => {\n  const today = new Date().toLocaleDateString('en-US', {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  });\n\n  // Get a random plant for today\n  const currentPlant = plantsData[Math.floor(Math.random() * plantsData.length)];\n  return /*#__PURE__*/_jsxDEV(PlantContainer, {\n    children: [/*#__PURE__*/_jsxDEV(DateDisplay, {\n      children: [\"Today's Plant \\u2022 \", today]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlantImage, {\n      src: currentPlant.image,\n      alt: currentPlant.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentPlant.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentPlant.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecipeSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Care Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentPlant.careInstructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: instruction\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Growing Conditions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), currentPlant.conditions.map((condition, index) => /*#__PURE__*/_jsxDEV(Badge, {\n        children: condition\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RecipeSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Origin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Origin: \", currentPlant.origin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_c6 = PlantOfTheDay;\nexport default PlantOfTheDay;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PlantContainer\");\n$RefreshReg$(_c2, \"PlantImage\");\n$RefreshReg$(_c3, \"DateDisplay\");\n$RefreshReg$(_c4, \"RecipeSection\");\n$RefreshReg$(_c5, \"Badge\");\n$RefreshReg$(_c6, \"PlantOfTheDay\");","map":{"version":3,"names":["React","Container","plantsData","styled","jsxDEV","_jsxDEV","PlantContainer","props","theme","queries","mobile","_c","PlantImage","img","_c2","DateDisplay","p","body","text","_c3","RecipeSection","div","_c4","Badge","span","_c5","PlantOfTheDay","today","Date","toLocaleDateString","weekday","month","day","year","currentPlant","Math","floor","random","length","children","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","name","description","careInstructions","map","instruction","index","conditions","condition","origin","_c6","$RefreshReg$"],"sources":["C:/MyProjects/react-blog-template/src/components/Plant/PlantOfTheDay.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Container } from '../StyledComponents/StyledComponents';\r\nimport plantsData from '../../data/plantsData';\r\nimport styled from 'styled-components';\r\n\r\nconst PlantContainer = styled(Container)`\r\n    text-align: center;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    padding: 2rem;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    @media (max-width: ${props => props.theme.queries.mobile}) {\r\n        padding: 1rem;\r\n    }\r\n`;\r\n\r\nconst PlantImage = styled.img`\r\n    max-width: 100%;\r\n    height: auto;\r\n    border-radius: 8px;\r\n    margin: 2rem auto;\r\n    display: block;\r\n`;\r\n\r\nconst DateDisplay = styled.p`\r\n    text-transform: uppercase;\r\n    letter-spacing: 2px;\r\n    font-size: 14px;\r\n    color: ${props => props.theme.body.text};\r\n`;\r\n\r\nconst RecipeSection = styled.div`\r\n    margin: 2rem auto;\r\n    text-align: left;\r\n    max-width: 600px;\r\n`;\r\n\r\nconst Badge = styled.span`\r\n    display: inline-block;\r\n    padding: 0.25rem 0.75rem;\r\n    margin: 0.25rem;\r\n    border-radius: 4px;\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    font-size: 14px;\r\n`;\r\n\r\nconst PlantOfTheDay = () => {\r\n    const today = new Date().toLocaleDateString('en-US', {\r\n        weekday: 'long',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n    });\r\n\r\n    // Get a random plant for today\r\n    const currentPlant = plantsData[Math.floor(Math.random() * plantsData.length)];\r\n\r\n    return (\r\n        <PlantContainer>\r\n            <DateDisplay>Today's Plant â€¢ {today}</DateDisplay>\r\n            <PlantImage src={currentPlant.image} alt={currentPlant.name} />\r\n            <h2>{currentPlant.name}</h2>\r\n            <p>{currentPlant.description}</p>\r\n\r\n            <RecipeSection>\r\n                <h3>Care Instructions</h3>\r\n                <ul>\r\n                    {currentPlant.careInstructions.map((instruction, index) => (\r\n                        <li key={index}>{instruction}</li>\r\n                    ))}\r\n                </ul>\r\n            </RecipeSection>\r\n\r\n            <div>\r\n                <h3>Growing Conditions</h3>\r\n                {currentPlant.conditions.map((condition, index) => (\r\n                    <Badge key={index}>{condition}</Badge>\r\n                ))}\r\n            </div>\r\n\r\n            <RecipeSection>\r\n                <h3>Origin</h3>\r\n                <p>Origin: {currentPlant.origin}</p>\r\n            </RecipeSection>\r\n        </PlantContainer>\r\n    );\r\n};\r\n\r\nexport default PlantOfTheDay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}