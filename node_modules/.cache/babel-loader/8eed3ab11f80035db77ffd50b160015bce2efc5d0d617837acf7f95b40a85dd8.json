{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProjects\\\\react-blog-template\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    // Check for token and set admin status on initial load\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decoded = JSON.parse(atob(token.split('.')[1]));\n        setIsAdmin(decoded.isAdmin);\n      } catch (err) {\n        console.error('Error decoding token:', err);\n        setIsAdmin(false);\n      }\n    }\n  }, []);\n  const login = token => {\n    localStorage.setItem('token', token);\n    try {\n      const decoded = JSON.parse(atob(token.split('.')[1]));\n      setIsAdmin(decoded.isAdmin);\n    } catch (err) {\n      console.error('Error decoding token:', err);\n      setIsAdmin(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setIsAdmin(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"Zkrc/jvYeP+Lg60sj9ov6ALel5o=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAdmin","setIsAdmin","token","localStorage","getItem","decoded","JSON","parse","atob","split","err","console","error","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/MyProjects/react-blog-template/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Check for token and set admin status on initial load\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            try {\r\n                const decoded = JSON.parse(atob(token.split('.')[1]));\r\n                setIsAdmin(decoded.isAdmin);\r\n            } catch (err) {\r\n                console.error('Error decoding token:', err);\r\n                setIsAdmin(false);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const login = (token) => {\r\n        localStorage.setItem('token', token);\r\n        try {\r\n            const decoded = JSON.parse(atob(token.split('.')[1]));\r\n            setIsAdmin(decoded.isAdmin);\r\n        } catch (err) {\r\n            console.error('Error decoding token:', err);\r\n            setIsAdmin(false);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setIsAdmin(false);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAdmin, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7CE,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACP,IAAI;QACA,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrDR,UAAU,CAACI,OAAO,CAACL,OAAO,CAAC;MAC/B,CAAC,CAAC,OAAOU,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;QAC3CT,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,KAAK,GAAIX,KAAK,IAAK;IACrBC,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;IACpC,IAAI;MACA,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrDR,UAAU,CAACI,OAAO,CAACL,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOU,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3CT,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMc,MAAM,GAAGA,CAAA,KAAM;IACjBZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCf,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,OAAO;MAAEa,KAAK;MAAEE;IAAO,CAAE;IAAAjB,QAAA,EACnDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvB,EAAA,CAtCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAwCzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGlC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAAC8B,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}