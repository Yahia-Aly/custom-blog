{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProjects\\\\react-blog-template\\\\src\\\\components\\\\Plant\\\\PlantOfTheDay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../StyledComponents/StyledComponents';\nimport plantsData from '../../data/plantsData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlantImage = styled.img`\n    width: 100%;\n    max-width: 600px;\n    height: auto;\n    border-radius: 8px;\n    margin: 2rem 0;\n`;\n_c = PlantImage;\nconst PlantInfo = styled.div`\n    margin: 2rem 0;\n    padding: 2rem;\n    background-color: ${props => props.theme.colors.lightGray};\n    border-radius: 8px;\n`;\n_c2 = PlantInfo;\nconst PlantDetail = styled.div`\n    margin: 1rem 0;\n    \n    strong {\n        color: ${props => props.theme.colors.primary};\n    }\n`;\n_c3 = PlantDetail;\nconst PlantOfTheDay = () => {\n  _s();\n  const [plant, setPlant] = useState(null);\n  useEffect(() => {\n    // Get today's date as a string (YYYY-MM-DD)\n    const today = new Date().toISOString().split('T')[0];\n\n    // Use the date string to generate a consistent index for the day\n    const dateNum = parseInt(today.replace(/-/g, ''), 10);\n    const index = dateNum % plantsData.length;\n\n    // Get today's plant\n    setPlant(plantsData[index]);\n  }, []);\n  if (!plant) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Plant of the Day: \", plant.commonName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: plant.scientificName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlantImage, {\n      src: plant.image,\n      alt: plant.commonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: plant.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlantInfo, {\n      children: [/*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Family:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), \" \", plant.family]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), \" \", plant.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Height:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), \" \", plant.height]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Spread:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), \" \", plant.spread]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sun Exposure:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), \" \", plant.sunExposure]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Water Needs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), \" \", plant.waterNeeds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Soil Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), \" \", plant.soilType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Bloom Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), \" \", plant.bloomTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Flower Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), \" \", plant.flowerColor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Care Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: plant.care\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(PlantOfTheDay, \"co3MEXfYtMbkz6ykyvOA8XyvQAw=\");\n_c4 = PlantOfTheDay;\nexport default PlantOfTheDay;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PlantImage\");\n$RefreshReg$(_c2, \"PlantInfo\");\n$RefreshReg$(_c3, \"PlantDetail\");\n$RefreshReg$(_c4, \"PlantOfTheDay\");","map":{"version":3,"names":["React","useState","useEffect","styled","Container","plantsData","jsxDEV","_jsxDEV","PlantImage","img","_c","PlantInfo","div","props","theme","colors","lightGray","_c2","PlantDetail","primary","_c3","PlantOfTheDay","_s","plant","setPlant","today","Date","toISOString","split","dateNum","parseInt","replace","index","length","children","fileName","_jsxFileName","lineNumber","columnNumber","commonName","scientificName","src","image","alt","description","family","type","height","spread","sunExposure","waterNeeds","soilType","bloomTime","flowerColor","care","_c4","$RefreshReg$"],"sources":["C:/MyProjects/react-blog-template/src/components/Plant/PlantOfTheDay.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container } from '../StyledComponents/StyledComponents';\r\nimport plantsData from '../../data/plantsData';\r\n\r\nconst PlantImage = styled.img`\r\n    width: 100%;\r\n    max-width: 600px;\r\n    height: auto;\r\n    border-radius: 8px;\r\n    margin: 2rem 0;\r\n`;\r\n\r\nconst PlantInfo = styled.div`\r\n    margin: 2rem 0;\r\n    padding: 2rem;\r\n    background-color: ${props => props.theme.colors.lightGray};\r\n    border-radius: 8px;\r\n`;\r\n\r\nconst PlantDetail = styled.div`\r\n    margin: 1rem 0;\r\n    \r\n    strong {\r\n        color: ${props => props.theme.colors.primary};\r\n    }\r\n`;\r\n\r\nconst PlantOfTheDay = () => {\r\n    const [plant, setPlant] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Get today's date as a string (YYYY-MM-DD)\r\n        const today = new Date().toISOString().split('T')[0];\r\n        \r\n        // Use the date string to generate a consistent index for the day\r\n        const dateNum = parseInt(today.replace(/-/g, ''), 10);\r\n        const index = dateNum % plantsData.length;\r\n        \r\n        // Get today's plant\r\n        setPlant(plantsData[index]);\r\n    }, []);\r\n\r\n    if (!plant) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h2>Plant of the Day: {plant.commonName}</h2>\r\n            <h3><em>{plant.scientificName}</em></h3>\r\n            \r\n            <PlantImage src={plant.image} alt={plant.commonName} />\r\n            \r\n            <p>{plant.description}</p>\r\n            \r\n            <PlantInfo>\r\n                <PlantDetail>\r\n                    <strong>Family:</strong> {plant.family}\r\n                </PlantDetail>\r\n                <PlantDetail>\r\n                    <strong>Type:</strong> {plant.type}\r\n                </PlantDetail>\r\n                <PlantDetail>\r\n                    <strong>Height:</strong> {plant.height}\r\n                </PlantDetail>\r\n                <PlantDetail>\r\n                    <strong>Spread:</strong> {plant.spread}\r\n                </PlantDetail>\r\n                <PlantDetail>\r\n                    <strong>Sun Exposure:</strong> {plant.sunExposure}\r\n                </PlantDetail>\r\n                <PlantDetail>\r\n                    <strong>Water Needs:</strong> {plant.waterNeeds}\r\n                </PlantDetail>\r\n                <PlantDetail>\r\n                    <strong>Soil Type:</strong> {plant.soilType}\r\n                </PlantDetail>\r\n                <PlantDetail>\r\n                    <strong>Bloom Time:</strong> {plant.bloomTime}\r\n                </PlantDetail>\r\n                <PlantDetail>\r\n                    <strong>Flower Color:</strong> {plant.flowerColor}\r\n                </PlantDetail>\r\n            </PlantInfo>\r\n\r\n            <h3>Care Instructions</h3>\r\n            <p>{plant.care}</p>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PlantOfTheDay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,sCAAsC;AAChE,OAAOC,UAAU,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGL,MAAM,CAACM,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,UAAU;AAQhB,MAAMG,SAAS,GAAGR,MAAM,CAACS,GAAG;AAC5B;AACA;AACA,wBAAwBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,SAAS;AAC7D;AACA,CAAC;AAACC,GAAA,GALIN,SAAS;AAOf,MAAMO,WAAW,GAAGf,MAAM,CAACS,GAAG;AAC9B;AACA;AACA;AACA,iBAAiBC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,CAACI,OAAO;AACpD;AACA,CAAC;AAACC,GAAA,GANIF,WAAW;AAQjB,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMuB,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEpD;IACA,MAAMC,OAAO,GAAGC,QAAQ,CAACL,KAAK,CAACM,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IACrD,MAAMC,KAAK,GAAGH,OAAO,GAAGxB,UAAU,CAAC4B,MAAM;;IAEzC;IACAT,QAAQ,CAACnB,UAAU,CAAC2B,KAAK,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACT,KAAK,EAAE;IACR,oBAAOhB,OAAA;MAAA2B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACI/B,OAAA,CAACH,SAAS;IAAA8B,QAAA,gBACN3B,OAAA;MAAA2B,QAAA,GAAI,oBAAkB,EAACX,KAAK,CAACgB,UAAU;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7C/B,OAAA;MAAA2B,QAAA,eAAI3B,OAAA;QAAA2B,QAAA,EAAKX,KAAK,CAACiB;MAAc;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExC/B,OAAA,CAACC,UAAU;MAACiC,GAAG,EAAElB,KAAK,CAACmB,KAAM;MAACC,GAAG,EAAEpB,KAAK,CAACgB;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEvD/B,OAAA;MAAA2B,QAAA,EAAIX,KAAK,CAACqB;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1B/B,OAAA,CAACI,SAAS;MAAAuB,QAAA,gBACN3B,OAAA,CAACW,WAAW;QAAAgB,QAAA,gBACR3B,OAAA;UAAA2B,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACf,KAAK,CAACsB,MAAM;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACd/B,OAAA,CAACW,WAAW;QAAAgB,QAAA,gBACR3B,OAAA;UAAA2B,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACf,KAAK,CAACuB,IAAI;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACd/B,OAAA,CAACW,WAAW;QAAAgB,QAAA,gBACR3B,OAAA;UAAA2B,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACf,KAAK,CAACwB,MAAM;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACd/B,OAAA,CAACW,WAAW;QAAAgB,QAAA,gBACR3B,OAAA;UAAA2B,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACf,KAAK,CAACyB,MAAM;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACd/B,OAAA,CAACW,WAAW;QAAAgB,QAAA,gBACR3B,OAAA;UAAA2B,QAAA,EAAQ;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACf,KAAK,CAAC0B,WAAW;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACd/B,OAAA,CAACW,WAAW;QAAAgB,QAAA,gBACR3B,OAAA;UAAA2B,QAAA,EAAQ;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACf,KAAK,CAAC2B,UAAU;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACd/B,OAAA,CAACW,WAAW;QAAAgB,QAAA,gBACR3B,OAAA;UAAA2B,QAAA,EAAQ;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACf,KAAK,CAAC4B,QAAQ;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACd/B,OAAA,CAACW,WAAW;QAAAgB,QAAA,gBACR3B,OAAA;UAAA2B,QAAA,EAAQ;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACf,KAAK,CAAC6B,SAAS;MAAA;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACd/B,OAAA,CAACW,WAAW;QAAAgB,QAAA,gBACR3B,OAAA;UAAA2B,QAAA,EAAQ;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACf,KAAK,CAAC8B,WAAW;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAEZ/B,OAAA;MAAA2B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B/B,OAAA;MAAA2B,QAAA,EAAIX,KAAK,CAAC+B;IAAI;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEpB,CAAC;AAAChB,EAAA,CA9DID,aAAa;AAAAkC,GAAA,GAAblC,aAAa;AAgEnB,eAAeA,aAAa;AAAC,IAAAX,EAAA,EAAAO,GAAA,EAAAG,GAAA,EAAAmC,GAAA;AAAAC,YAAA,CAAA9C,EAAA;AAAA8C,YAAA,CAAAvC,GAAA;AAAAuC,YAAA,CAAApC,GAAA;AAAAoC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}