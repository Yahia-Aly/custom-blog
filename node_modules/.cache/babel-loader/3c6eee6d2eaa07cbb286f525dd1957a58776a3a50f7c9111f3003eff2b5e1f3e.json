{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProjects\\\\react-blog-template\\\\src\\\\components\\\\Plant\\\\PlantOfTheDay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../StyledComponents/StyledComponents';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlantImage = styled.img`\n    width: 100%;\n    max-width: 600px;\n    height: auto;\n    border-radius: 8px;\n    margin: 2rem 0;\n    object-fit: cover;\n`;\n_c = PlantImage;\nconst PlantInfo = styled.div`\n    margin: 2rem 0;\n    padding: 2rem;\n    background-color: ${props => props.theme.colors.lightGray};\n    border-radius: 8px;\n`;\n_c2 = PlantInfo;\nconst PlantDetail = styled.div`\n    margin: 1rem 0;\n    \n    strong {\n        color: ${props => props.theme.colors.primary};\n    }\n`;\n_c3 = PlantDetail;\nconst LoadingContainer = styled(Container)`\n    text-align: center;\n    padding: 2rem;\n`;\n_c4 = LoadingContainer;\nconst ErrorContainer = styled(Container)`\n    text-align: center;\n    padding: 2rem;\n    color: red;\n`;\n_c5 = ErrorContainer;\nconst PlantOfTheDay = () => {\n  _s();\n  const [plant, setPlant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [clientToken, setClientToken] = useState(null);\n  const TOKEN = 'YPL0oCPPmylIEwr78weBx3uvF4s3qv2k4YnjfaBC53M';\n\n  // First, get a client-side token\n  useEffect(() => {\n    const getClientToken = async () => {\n      try {\n        const params = {\n          origin: window.location.origin,\n          token: TOKEN\n        };\n        const response = await axios({\n          method: 'post',\n          url: '/api/auth/claim',\n          data: params,\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        if (response.data && response.data.token) {\n          setClientToken(response.data.token);\n        } else {\n          throw new Error('No token received');\n        }\n      } catch (err) {\n        console.error('Error getting client token:', err);\n        setError('Failed to authenticate with the plant database');\n        setLoading(false);\n      }\n    };\n    getClientToken();\n  }, []);\n\n  // Then fetch the plant data once we have the client token\n  useEffect(() => {\n    const fetchPlant = async () => {\n      if (!clientToken) return;\n      try {\n        // Get today's date to generate a consistent ID\n        const today = new Date().toISOString().split('T')[0];\n        const dateNum = parseInt(today.replace(/-/g, ''), 10);\n\n        // Use the date to select a plant ID between 1 and 100\n        const plantId = dateNum % 100 + 1;\n        const response = await axios.get(`/api/v1/species/${plantId}?token=${clientToken}`, {\n          headers: {\n            'Accept': 'application/json'\n          }\n        });\n        if (response.data && response.data.data) {\n          setPlant(response.data.data);\n        } else {\n          throw new Error('Invalid plant data received');\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching plant:', err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchPlant();\n  }, [clientToken]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading today's featured plant...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(ErrorContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error loading plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n  if (!plant) {\n    return /*#__PURE__*/_jsxDEV(ErrorContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No plant data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Plant of the Day: \", plant.common_name || plant.scientific_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: plant.scientific_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), plant.image_url && /*#__PURE__*/_jsxDEV(PlantImage, {\n      src: plant.image_url,\n      alt: plant.common_name || plant.scientific_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PlantInfo, {\n      children: [/*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Family:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), \" \", plant.family]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genus:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), \" \", plant.genus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), plant.year && /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Year Discovered:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), \" \", plant.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), plant.bibliography && /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Bibliography:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), \" \", plant.bibliography]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), plant.author && /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), \" \", plant.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), plant.rank && /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Rank:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), \" \", plant.rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), plant.status && /*#__PURE__*/_jsxDEV(PlantDetail, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), \" \", plant.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), plant.observations && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Additional Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: plant.observations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n_s(PlantOfTheDay, \"VfmpNMRLCojm08lNOjIJa0hBVg8=\");\n_c6 = PlantOfTheDay;\nexport default PlantOfTheDay;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PlantImage\");\n$RefreshReg$(_c2, \"PlantInfo\");\n$RefreshReg$(_c3, \"PlantDetail\");\n$RefreshReg$(_c4, \"LoadingContainer\");\n$RefreshReg$(_c5, \"ErrorContainer\");\n$RefreshReg$(_c6, \"PlantOfTheDay\");","map":{"version":3,"names":["React","useState","useEffect","styled","Container","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PlantImage","img","_c","PlantInfo","div","props","theme","colors","lightGray","_c2","PlantDetail","primary","_c3","LoadingContainer","_c4","ErrorContainer","_c5","PlantOfTheDay","_s","plant","setPlant","loading","setLoading","error","setError","clientToken","setClientToken","TOKEN","getClientToken","params","origin","window","location","token","response","method","url","data","headers","Error","err","console","fetchPlant","today","Date","toISOString","split","dateNum","parseInt","replace","plantId","get","message","children","fileName","_jsxFileName","lineNumber","columnNumber","common_name","scientific_name","image_url","src","alt","family","genus","year","bibliography","author","rank","status","observations","_c6","$RefreshReg$"],"sources":["C:/MyProjects/react-blog-template/src/components/Plant/PlantOfTheDay.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container } from '../StyledComponents/StyledComponents';\r\nimport axios from 'axios';\r\n\r\nconst PlantImage = styled.img`\r\n    width: 100%;\r\n    max-width: 600px;\r\n    height: auto;\r\n    border-radius: 8px;\r\n    margin: 2rem 0;\r\n    object-fit: cover;\r\n`;\r\n\r\nconst PlantInfo = styled.div`\r\n    margin: 2rem 0;\r\n    padding: 2rem;\r\n    background-color: ${props => props.theme.colors.lightGray};\r\n    border-radius: 8px;\r\n`;\r\n\r\nconst PlantDetail = styled.div`\r\n    margin: 1rem 0;\r\n    \r\n    strong {\r\n        color: ${props => props.theme.colors.primary};\r\n    }\r\n`;\r\n\r\nconst LoadingContainer = styled(Container)`\r\n    text-align: center;\r\n    padding: 2rem;\r\n`;\r\n\r\nconst ErrorContainer = styled(Container)`\r\n    text-align: center;\r\n    padding: 2rem;\r\n    color: red;\r\n`;\r\n\r\nconst PlantOfTheDay = () => {\r\n    const [plant, setPlant] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [clientToken, setClientToken] = useState(null);\r\n    const TOKEN = 'YPL0oCPPmylIEwr78weBx3uvF4s3qv2k4YnjfaBC53M';\r\n\r\n    // First, get a client-side token\r\n    useEffect(() => {\r\n        const getClientToken = async () => {\r\n            try {\r\n                const params = {\r\n                    origin: window.location.origin,\r\n                    token: TOKEN\r\n                };\r\n\r\n                const response = await axios({\r\n                    method: 'post',\r\n                    url: '/api/auth/claim',\r\n                    data: params,\r\n                    headers: { \r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                });\r\n\r\n                if (response.data && response.data.token) {\r\n                    setClientToken(response.data.token);\r\n                } else {\r\n                    throw new Error('No token received');\r\n                }\r\n            } catch (err) {\r\n                console.error('Error getting client token:', err);\r\n                setError('Failed to authenticate with the plant database');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        getClientToken();\r\n    }, []);\r\n\r\n    // Then fetch the plant data once we have the client token\r\n    useEffect(() => {\r\n        const fetchPlant = async () => {\r\n            if (!clientToken) return;\r\n\r\n            try {\r\n                // Get today's date to generate a consistent ID\r\n                const today = new Date().toISOString().split('T')[0];\r\n                const dateNum = parseInt(today.replace(/-/g, ''), 10);\r\n                \r\n                // Use the date to select a plant ID between 1 and 100\r\n                const plantId = (dateNum % 100) + 1;\r\n\r\n                const response = await axios.get(\r\n                    `/api/v1/species/${plantId}?token=${clientToken}`,\r\n                    {\r\n                        headers: {\r\n                            'Accept': 'application/json'\r\n                        }\r\n                    }\r\n                );\r\n\r\n                if (response.data && response.data.data) {\r\n                    setPlant(response.data.data);\r\n                } else {\r\n                    throw new Error('Invalid plant data received');\r\n                }\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.error('Error fetching plant:', err);\r\n                setError(err.message);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPlant();\r\n    }, [clientToken]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <LoadingContainer>\r\n                <h2>Loading today's featured plant...</h2>\r\n            </LoadingContainer>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <ErrorContainer>\r\n                <h2>Error loading plant</h2>\r\n                <p>{error}</p>\r\n            </ErrorContainer>\r\n        );\r\n    }\r\n\r\n    if (!plant) {\r\n        return (\r\n            <ErrorContainer>\r\n                <h2>No plant data available</h2>\r\n            </ErrorContainer>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h2>Plant of the Day: {plant.common_name || plant.scientific_name}</h2>\r\n            <h3><em>{plant.scientific_name}</em></h3>\r\n            \r\n            {plant.image_url && (\r\n                <PlantImage src={plant.image_url} alt={plant.common_name || plant.scientific_name} />\r\n            )}\r\n            \r\n            <PlantInfo>\r\n                <PlantDetail>\r\n                    <strong>Family:</strong> {plant.family}\r\n                </PlantDetail>\r\n                <PlantDetail>\r\n                    <strong>Genus:</strong> {plant.genus}\r\n                </PlantDetail>\r\n                {plant.year && (\r\n                    <PlantDetail>\r\n                        <strong>Year Discovered:</strong> {plant.year}\r\n                    </PlantDetail>\r\n                )}\r\n                {plant.bibliography && (\r\n                    <PlantDetail>\r\n                        <strong>Bibliography:</strong> {plant.bibliography}\r\n                    </PlantDetail>\r\n                )}\r\n                {plant.author && (\r\n                    <PlantDetail>\r\n                        <strong>Author:</strong> {plant.author}\r\n                    </PlantDetail>\r\n                )}\r\n                {plant.rank && (\r\n                    <PlantDetail>\r\n                        <strong>Rank:</strong> {plant.rank}\r\n                    </PlantDetail>\r\n                )}\r\n                {plant.status && (\r\n                    <PlantDetail>\r\n                        <strong>Status:</strong> {plant.status}\r\n                    </PlantDetail>\r\n                )}\r\n            </PlantInfo>\r\n\r\n            {plant.observations && (\r\n                <>\r\n                    <h3>Additional Information</h3>\r\n                    <p>{plant.observations}</p>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PlantOfTheDay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}