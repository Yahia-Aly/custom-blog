{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProjects\\\\react-blog-template\\\\src\\\\pages\\\\Blogs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { BodyContainer, Container } from '../components/StyledComponents/StyledComponents';\nimport Article from '../components/Article/Article';\nimport Posts from '../posts/Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blogs = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/posts');\n        if (!response.ok) {\n          throw new Error('Failed to fetch posts');\n        }\n        const data = await response.json();\n        // Only set posts if we actually got data\n        if (data && data.length > 0) {\n          setPosts(data);\n        } else {\n          setPosts(Posts);\n        }\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n        setError(err.message);\n        setPosts(Posts);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(BodyContainer, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        top: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    console.error('Error:', error);\n  }\n  return /*#__PURE__*/_jsxDEV(BodyContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      top: 6,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        leftAlign: true,\n        bottom: 4,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"All Blog Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No blog posts found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this) : posts.map(post => {\n        const isStaticPost = !post._id;\n        return /*#__PURE__*/_jsxDEV(Article, {\n          route: isStaticPost ? `/${post.route}` : `/post/${post._id}`,\n          thumbnail: post.coverImage || post.image,\n          title: post.title,\n          date: post.createdAt ? new Date(post.createdAt).toLocaleDateString() : post.date,\n          description: post.content ? post.content.substring(0, 150) + '...' : post.description\n        }, post._id || post.route, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Blogs, \"LokH4zLhvTiDlclYvi1UF5HfM98=\", false, function () {\n  return [useHistory];\n});\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","BodyContainer","Container","Article","Posts","jsxDEV","_jsxDEV","Blogs","_s","posts","setPosts","loading","setLoading","error","setError","history","fetchPosts","response","fetch","ok","Error","data","json","length","err","console","message","children","top","fileName","_jsxFileName","lineNumber","columnNumber","leftAlign","bottom","map","post","isStaticPost","_id","route","thumbnail","coverImage","image","title","date","createdAt","Date","toLocaleDateString","description","content","substring","_c","$RefreshReg$"],"sources":["C:/MyProjects/react-blog-template/src/pages/Blogs.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BodyContainer, Container } from '../components/StyledComponents/StyledComponents';\r\nimport Article from '../components/Article/Article';\r\nimport Posts from '../posts/Posts';\r\n\r\nconst Blogs = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/posts');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch posts');\r\n                }\r\n                const data = await response.json();\r\n                // Only set posts if we actually got data\r\n                if (data && data.length > 0) {\r\n                    setPosts(data);\r\n                } else {\r\n                    setPosts(Posts);\r\n                }\r\n            } catch (err) {\r\n                console.error('Error fetching posts:', err);\r\n                setError(err.message);\r\n                setPosts(Posts);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <BodyContainer>\r\n                <Container top={6}>\r\n                    <div>Loading...</div>\r\n                </Container>\r\n            </BodyContainer>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        console.error('Error:', error);\r\n    }\r\n\r\n    return (\r\n        <BodyContainer>\r\n            <Container top={6}>\r\n                <Container leftAlign bottom={4}>\r\n                    <h2>All Blog Posts</h2>\r\n                </Container>\r\n                {posts.length === 0 ? (\r\n                    <div>No blog posts found.</div>\r\n                ) : (\r\n                    posts.map((post) => {\r\n                        const isStaticPost = !post._id;\r\n                        return (\r\n                            <Article\r\n                                key={post._id || post.route}\r\n                                route={isStaticPost ? `/${post.route}` : `/post/${post._id}`}\r\n                                thumbnail={post.coverImage || post.image}\r\n                                title={post.title}\r\n                                date={post.createdAt ? new Date(post.createdAt).toLocaleDateString() : post.date}\r\n                                description={post.content ? post.content.substring(0, 150) + '...' : post.description}\r\n                            />\r\n                        );\r\n                    })\r\n                )}\r\n            </Container>\r\n        </BodyContainer>\r\n    );\r\n};\r\n\r\nexport default Blogs; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}